{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/edgeservice\/edgeserviceclient\/backend\/mpo\/newconsent\/modeltype\/rawrepresentable-implementations"]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"modules":[{"name":"EdgeService"}],"roleHeading":"API Collection","title":"RawRepresentable Implementations","role":"collectionGroup"},"sections":[],"hierarchy":{"paths":[["doc:\/\/com.mimik.EdgeService\/documentation\/EdgeService","doc:\/\/com.mimik.EdgeService\/documentation\/EdgeService\/EdgeServiceClient","doc:\/\/com.mimik.EdgeService\/documentation\/EdgeService\/EdgeServiceClient\/Backend","doc:\/\/com.mimik.EdgeService\/documentation\/EdgeService\/EdgeServiceClient\/Backend\/mPO","doc:\/\/com.mimik.EdgeService\/documentation\/EdgeService\/EdgeServiceClient\/Backend\/mPO\/NewConsent","doc:\/\/com.mimik.EdgeService\/documentation\/EdgeService\/EdgeServiceClient\/Backend\/mPO\/NewConsent\/ModelType"]]},"identifier":{"url":"doc:\/\/com.mimik.EdgeService\/documentation\/EdgeService\/EdgeServiceClient\/Backend\/mPO\/NewConsent\/ModelType\/RawRepresentable-Implementations","interfaceLanguage":"swift"},"kind":"article","topicSections":[{"identifiers":["doc:\/\/com.mimik.EdgeService\/documentation\/EdgeService\/EdgeServiceClient\/Backend\/mPO\/NewConsent\/ModelType\/init(from:)"],"generated":true,"anchor":"Initializers","title":"Initializers"},{"generated":true,"anchor":"Instance-Properties","identifiers":["doc:\/\/com.mimik.EdgeService\/documentation\/EdgeService\/EdgeServiceClient\/Backend\/mPO\/NewConsent\/ModelType\/hashValue"],"title":"Instance Properties"},{"identifiers":["doc:\/\/com.mimik.EdgeService\/documentation\/EdgeService\/EdgeServiceClient\/Backend\/mPO\/NewConsent\/ModelType\/encode(to:)","doc:\/\/com.mimik.EdgeService\/documentation\/EdgeService\/EdgeServiceClient\/Backend\/mPO\/NewConsent\/ModelType\/hash(into:)"],"title":"Instance Methods","anchor":"Instance-Methods","generated":true}],"references":{"doc://com.mimik.EdgeService/documentation/EdgeService/EdgeServiceClient/Backend/mPO/NewConsent/ModelType":{"title":"EdgeServiceClient.Backend.mPO.NewConsent.ModelType","identifier":"doc:\/\/com.mimik.EdgeService\/documentation\/EdgeService\/EdgeServiceClient\/Backend\/mPO\/NewConsent\/ModelType","kind":"symbol","type":"topic","url":"\/documentation\/edgeservice\/edgeserviceclient\/backend\/mpo\/newconsent\/modeltype","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ModelType","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"text":"ModelType","kind":"identifier"}],"abstract":[]},"doc://com.mimik.EdgeService/documentation/EdgeService/EdgeServiceClient/Backend/mPO/NewConsent":{"kind":"symbol","navigatorTitle":[{"text":"NewConsent","kind":"identifier"}],"abstract":[{"type":"text","text":"New consent to contact the profile service user."}],"type":"topic","role":"symbol","identifier":"doc:\/\/com.mimik.EdgeService\/documentation\/EdgeService\/EdgeServiceClient\/Backend\/mPO\/NewConsent","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"NewConsent"}],"title":"EdgeServiceClient.Backend.mPO.NewConsent","url":"\/documentation\/edgeservice\/edgeserviceclient\/backend\/mpo\/newconsent"},"doc://com.mimik.EdgeService/documentation/EdgeService":{"kind":"symbol","type":"topic","role":"collection","identifier":"doc:\/\/com.mimik.EdgeService\/documentation\/EdgeService","url":"\/documentation\/edgeservice","title":"EdgeService","abstract":[]},"doc://com.mimik.EdgeService/documentation/EdgeService/EdgeServiceClient/Backend/mPO/NewConsent/ModelType/hash(into:)":{"conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Self","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Hashable","type":"codeVoice"},{"type":"text","text":" and "},{"code":"RawValue","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Hashable","type":"codeVoice"},{"text":".","type":"text"}]},"url":"\/documentation\/edgeservice\/edgeserviceclient\/backend\/mpo\/newconsent\/modeltype\/hash(into:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"hash","kind":"identifier"},{"text":"(","kind":"text"},{"text":"into","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"preciseIdentifier":"s:s6HasherV","text":"Hasher","kind":"typeIdentifier"},{"kind":"text","text":")"}],"type":"topic","role":"symbol","identifier":"doc:\/\/com.mimik.EdgeService\/documentation\/EdgeService\/EdgeServiceClient\/Backend\/mPO\/NewConsent\/ModelType\/hash(into:)","kind":"symbol","title":"hash(into:)","abstract":[]},"doc://com.mimik.EdgeService/documentation/EdgeService/EdgeServiceClient/Backend/mPO/NewConsent/ModelType/init(from:)":{"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Self","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Decodable","type":"codeVoice"},{"type":"text","text":" and "},{"type":"codeVoice","code":"RawValue"},{"type":"text","text":" is "},{"type":"codeVoice","code":"String"},{"text":".","type":"text"}]},"fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"text":"from","kind":"externalParam"},{"text":": any ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s7DecoderP","text":"Decoder"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"}],"role":"symbol","url":"\/documentation\/edgeservice\/edgeserviceclient\/backend\/mpo\/newconsent\/modeltype\/init(from:)","type":"topic","kind":"symbol","abstract":[],"identifier":"doc:\/\/com.mimik.EdgeService\/documentation\/EdgeService\/EdgeServiceClient\/Backend\/mPO\/NewConsent\/ModelType\/init(from:)","title":"init(from:)"},"doc://com.mimik.EdgeService/documentation/EdgeService/EdgeServiceClient/Backend/mPO/NewConsent/ModelType/hashValue":{"kind":"symbol","type":"topic","role":"symbol","identifier":"doc:\/\/com.mimik.EdgeService\/documentation\/EdgeService\/EdgeServiceClient\/Backend\/mPO\/NewConsent\/ModelType\/hashValue","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"Self","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Hashable","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"RawValue","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Hashable"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"hashValue"},{"kind":"text","text":": "},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"}],"url":"\/documentation\/edgeservice\/edgeserviceclient\/backend\/mpo\/newconsent\/modeltype\/hashvalue","title":"hashValue","abstract":[]},"doc://com.mimik.EdgeService/documentation/EdgeService/EdgeServiceClient/Backend":{"title":"EdgeServiceClient.Backend","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Backend"}],"url":"\/documentation\/edgeservice\/edgeserviceclient\/backend","navigatorTitle":[{"kind":"identifier","text":"Backend"}],"type":"topic","abstract":[{"text":"API for integrating mimik backend microservices.","type":"text"}],"role":"symbol","kind":"symbol","identifier":"doc:\/\/com.mimik.EdgeService\/documentation\/EdgeService\/EdgeServiceClient\/Backend"},"doc://com.mimik.EdgeService/documentation/EdgeService/EdgeServiceClient/Backend/mPO":{"type":"topic","role":"symbol","identifier":"doc:\/\/com.mimik.EdgeService\/documentation\/EdgeService\/EdgeServiceClient\/Backend\/mPO","url":"\/documentation\/edgeservice\/edgeserviceclient\/backend\/mpo","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"mPO"}],"abstract":[{"text":"Backend microservice for handling user profile data management.","type":"text"}],"title":"EdgeServiceClient.Backend.mPO","navigatorTitle":[{"kind":"identifier","text":"mPO"}],"kind":"symbol"},"doc://com.mimik.EdgeService/documentation/EdgeService/EdgeServiceClient":{"kind":"symbol","role":"symbol","identifier":"doc:\/\/com.mimik.EdgeService\/documentation\/EdgeService\/EdgeServiceClient","abstract":[{"type":"text","text":"Provides API for integrating mimik edge and backend microservices."}],"url":"\/documentation\/edgeservice\/edgeserviceclient","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"EdgeServiceClient"}],"type":"topic","title":"EdgeServiceClient","navigatorTitle":[{"kind":"identifier","text":"EdgeServiceClient"}]},"doc://com.mimik.EdgeService/documentation/EdgeService/EdgeServiceClient/Backend/mPO/NewConsent/ModelType/encode(to:)":{"url":"\/documentation\/edgeservice\/edgeserviceclient\/backend\/mpo\/newconsent\/modeltype\/encode(to:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"encode"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"to"},{"text":": any ","kind":"text"},{"text":"Encoder","kind":"typeIdentifier","preciseIdentifier":"s:s7EncoderP"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"}],"kind":"symbol","identifier":"doc:\/\/com.mimik.EdgeService\/documentation\/EdgeService\/EdgeServiceClient\/Backend\/mPO\/NewConsent\/ModelType\/encode(to:)","title":"encode(to:)","abstract":[],"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Self","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Encodable","type":"codeVoice"},{"type":"text","text":" and "},{"type":"codeVoice","code":"RawValue"},{"type":"text","text":" is "},{"type":"codeVoice","code":"String"},{"type":"text","text":"."}]},"type":"topic","role":"symbol"}}}