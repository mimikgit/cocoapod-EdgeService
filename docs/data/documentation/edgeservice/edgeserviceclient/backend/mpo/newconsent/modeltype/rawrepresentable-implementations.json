{"variants":[{"paths":["\/documentation\/edgeservice\/edgeserviceclient\/backend\/mpo\/newconsent\/modeltype\/rawrepresentable-implementations"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"metadata":{"role":"collectionGroup","title":"RawRepresentable Implementations","roleHeading":"API Collection","modules":[{"name":"EdgeService"}]},"sections":[],"kind":"article","hierarchy":{"paths":[["doc:\/\/com.mimik.EdgeService\/documentation\/EdgeService","doc:\/\/com.mimik.EdgeService\/documentation\/EdgeService\/EdgeServiceClient","doc:\/\/com.mimik.EdgeService\/documentation\/EdgeService\/EdgeServiceClient\/Backend","doc:\/\/com.mimik.EdgeService\/documentation\/EdgeService\/EdgeServiceClient\/Backend\/mPO","doc:\/\/com.mimik.EdgeService\/documentation\/EdgeService\/EdgeServiceClient\/Backend\/mPO\/NewConsent","doc:\/\/com.mimik.EdgeService\/documentation\/EdgeService\/EdgeServiceClient\/Backend\/mPO\/NewConsent\/ModelType"]]},"identifier":{"url":"doc:\/\/com.mimik.EdgeService\/documentation\/EdgeService\/EdgeServiceClient\/Backend\/mPO\/NewConsent\/ModelType\/RawRepresentable-Implementations","interfaceLanguage":"swift"},"topicSections":[{"identifiers":["doc:\/\/com.mimik.EdgeService\/documentation\/EdgeService\/EdgeServiceClient\/Backend\/mPO\/NewConsent\/ModelType\/init(from:)"],"generated":true,"title":"Initializers","anchor":"Initializers"},{"generated":true,"identifiers":["doc:\/\/com.mimik.EdgeService\/documentation\/EdgeService\/EdgeServiceClient\/Backend\/mPO\/NewConsent\/ModelType\/hashValue"],"anchor":"Instance-Properties","title":"Instance Properties"},{"generated":true,"title":"Instance Methods","identifiers":["doc:\/\/com.mimik.EdgeService\/documentation\/EdgeService\/EdgeServiceClient\/Backend\/mPO\/NewConsent\/ModelType\/encode(to:)","doc:\/\/com.mimik.EdgeService\/documentation\/EdgeService\/EdgeServiceClient\/Backend\/mPO\/NewConsent\/ModelType\/hash(into:)"],"anchor":"Instance-Methods"}],"references":{"doc://com.mimik.EdgeService/documentation/EdgeService/EdgeServiceClient/Backend/mPO/NewConsent/ModelType/hash(into:)":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"hash","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"into"},{"text":": ","kind":"text"},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"preciseIdentifier":"s:s6HasherV","kind":"typeIdentifier","text":"Hasher"},{"text":")","kind":"text"}],"kind":"symbol","role":"symbol","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" conforms to "},{"code":"Hashable","type":"codeVoice"},{"type":"text","text":" and "},{"type":"codeVoice","code":"RawValue"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Hashable"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"identifier":"doc:\/\/com.mimik.EdgeService\/documentation\/EdgeService\/EdgeServiceClient\/Backend\/mPO\/NewConsent\/ModelType\/hash(into:)","url":"\/documentation\/edgeservice\/edgeserviceclient\/backend\/mpo\/newconsent\/modeltype\/hash(into:)","type":"topic","abstract":[],"title":"hash(into:)"},"doc://com.mimik.EdgeService/documentation/EdgeService/EdgeServiceClient/Backend/mPO/NewConsent/ModelType":{"role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"text":"ModelType","kind":"identifier"}],"title":"EdgeServiceClient.Backend.mPO.NewConsent.ModelType","url":"\/documentation\/edgeservice\/edgeserviceclient\/backend\/mpo\/newconsent\/modeltype","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"ModelType"}],"identifier":"doc:\/\/com.mimik.EdgeService\/documentation\/EdgeService\/EdgeServiceClient\/Backend\/mPO\/NewConsent\/ModelType","abstract":[],"type":"topic"},"doc://com.mimik.EdgeService/documentation/EdgeService":{"url":"\/documentation\/edgeservice","identifier":"doc:\/\/com.mimik.EdgeService\/documentation\/EdgeService","type":"topic","title":"EdgeService","role":"collection","abstract":[{"text":"mimik Client Library for iOS provides a programmatic way to work with the mim OE (edgeEngine) Runtime to access information about the mobile device on which the application is running.","type":"text"}],"kind":"symbol"},"doc://com.mimik.EdgeService/documentation/EdgeService/EdgeServiceClient/Backend/mPO":{"identifier":"doc:\/\/com.mimik.EdgeService\/documentation\/EdgeService\/EdgeServiceClient\/Backend\/mPO","abstract":[{"text":"Backend microservice for handling user profile data management.","type":"text"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"mPO"}],"title":"EdgeServiceClient.Backend.mPO","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"mPO"}],"url":"\/documentation\/edgeservice\/edgeserviceclient\/backend\/mpo","type":"topic"},"doc://com.mimik.EdgeService/documentation/EdgeService/EdgeServiceClient/Backend":{"url":"\/documentation\/edgeservice\/edgeserviceclient\/backend","identifier":"doc:\/\/com.mimik.EdgeService\/documentation\/EdgeService\/EdgeServiceClient\/Backend","type":"topic","title":"EdgeServiceClient.Backend","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"Backend","kind":"identifier"}],"navigatorTitle":[{"text":"Backend","kind":"identifier"}],"abstract":[{"text":"API for integrating mimik backend microservices.","type":"text"}],"kind":"symbol"},"doc://com.mimik.EdgeService/documentation/EdgeService/EdgeServiceClient/Backend/mPO/NewConsent/ModelType/init(from:)":{"fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"text":"from","kind":"externalParam"},{"kind":"text","text":": any "},{"text":"Decoder","kind":"typeIdentifier","preciseIdentifier":"s:s7DecoderP"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"}],"url":"\/documentation\/edgeservice\/edgeserviceclient\/backend\/mpo\/newconsent\/modeltype\/init(from:)","abstract":[],"title":"init(from:)","kind":"symbol","role":"symbol","type":"topic","conformance":{"constraints":[{"code":"Self","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Decodable","type":"codeVoice"},{"type":"text","text":" and "},{"type":"codeVoice","code":"RawValue"},{"type":"text","text":" is "},{"type":"codeVoice","code":"String"},{"type":"text","text":"."}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"identifier":"doc:\/\/com.mimik.EdgeService\/documentation\/EdgeService\/EdgeServiceClient\/Backend\/mPO\/NewConsent\/ModelType\/init(from:)"},"doc://com.mimik.EdgeService/documentation/EdgeService/EdgeServiceClient/Backend/mPO/NewConsent/ModelType/hashValue":{"conformance":{"constraints":[{"code":"Self","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Hashable","type":"codeVoice"},{"type":"text","text":" and "},{"type":"codeVoice","code":"RawValue"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"type":"topic","abstract":[],"url":"\/documentation\/edgeservice\/edgeserviceclient\/backend\/mpo\/newconsent\/modeltype\/hashvalue","identifier":"doc:\/\/com.mimik.EdgeService\/documentation\/EdgeService\/EdgeServiceClient\/Backend\/mPO\/NewConsent\/ModelType\/hashValue","kind":"symbol","title":"hashValue","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"hashValue"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"}]},"doc://com.mimik.EdgeService/documentation/EdgeService/EdgeServiceClient":{"kind":"symbol","url":"\/documentation\/edgeservice\/edgeserviceclient","abstract":[{"type":"text","text":"Provides API for integrating mimik edge and backend microservices."}],"role":"symbol","identifier":"doc:\/\/com.mimik.EdgeService\/documentation\/EdgeService\/EdgeServiceClient","type":"topic","navigatorTitle":[{"kind":"identifier","text":"EdgeServiceClient"}],"title":"EdgeServiceClient","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"EdgeServiceClient","kind":"identifier"}]},"doc://com.mimik.EdgeService/documentation/EdgeService/EdgeServiceClient/Backend/mPO/NewConsent":{"abstract":[{"text":"New consent to contact the profile service user.","type":"text"}],"identifier":"doc:\/\/com.mimik.EdgeService\/documentation\/EdgeService\/EdgeServiceClient\/Backend\/mPO\/NewConsent","kind":"symbol","title":"EdgeServiceClient.Backend.mPO.NewConsent","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"NewConsent","kind":"identifier"}],"type":"topic","navigatorTitle":[{"text":"NewConsent","kind":"identifier"}],"url":"\/documentation\/edgeservice\/edgeserviceclient\/backend\/mpo\/newconsent"},"doc://com.mimik.EdgeService/documentation/EdgeService/EdgeServiceClient/Backend/mPO/NewConsent/ModelType/encode(to:)":{"role":"symbol","kind":"symbol","abstract":[],"identifier":"doc:\/\/com.mimik.EdgeService\/documentation\/EdgeService\/EdgeServiceClient\/Backend\/mPO\/NewConsent\/ModelType\/encode(to:)","type":"topic","title":"encode(to:)","url":"\/documentation\/edgeservice\/edgeserviceclient\/backend\/mpo\/newconsent\/modeltype\/encode(to:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"encode","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"to"},{"text":": any ","kind":"text"},{"kind":"typeIdentifier","text":"Encoder","preciseIdentifier":"s:s7EncoderP"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"}],"conformance":{"constraints":[{"type":"codeVoice","code":"Self"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Encodable"},{"type":"text","text":" and "},{"type":"codeVoice","code":"RawValue"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"String"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]}}}}